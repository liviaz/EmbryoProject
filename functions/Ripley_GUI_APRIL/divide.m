function divide=divide(data, doplot)
% divide=divide(data, doplot)
% Splits a distribution in smaller pieces
% Input:
% data - the original distribution in format [X Y Z]
% doplot - whether to make a plot illustrating how data is divided (1 or 0)
% Output: 
% a cell array with distributions
% divide{i}.data
% where data is of format [X Y Z]
%
% License: RipleyGUI is distributed free under the conditions that
% (1) it shall not be incorporated in software that is subsequently sold; 
% (2) the authorship of the software shall be acknowledged in any publication that uses results generated by the software; 
% (3) this notice shall remain in place in each source file. 

if (nargin < 2) || isempty(doplot)
    doplot = 1;
end
% Find the longest side to cut along this side
s=(max(data)-min(data));
if s(2)>s(1)
    temp=data(:,1);
    data(:,1)=data(:,2);
    data(:,2)=temp;
    clear temp
end
s=(max(data)-min(data));
if s(3)>s(1)
    temp=data(:,1);
    data(:,1)=data(:,3);
    data(:,3)=temp;
    clear temp
end

% Do the cutting
data=sortrows(data);
mi=min(data);
data(:,1)=data(:,1)-mi(1);
data(:,2)=data(:,2)-mi(2);
data(:,3)=data(:,3)-mi(3);
s=(max(data)-min(data));
r=round(s(1)/s(2));
if doplot
    m=['*';'o';'s';'x';'p';'.';'x';'o';'x';'o'];
    f=['g';'r';'c';'m';'y';'k';'g';'r';'c';'r'];
    scatter3(data(:,1),data(:,2),data(:,3),'.')
    axis equal
    hold on
end
if r>1
    tot=0;
    r=linspace(0,s(1),r+1);
    for i=1:numel(r)-1
        a=and(data(:,1)>=r(i),data(:,1)<=r(i+1));
        b=nnz(a);
        c=find(a>0);
        ndata{i}=data(c(1):c(b),:);
        if doplot
            scatter3(ndata{i}(:,1),ndata{i}(:,2),ndata{i}(:,3),m(mod(i,10)+1),f(mod(i,10)+1))
        end
        tot=tot+size(ndata{i},1);
        if doplot
            title([num2str(tot) ' Points'])
        end
    end
    
else
    ndata{1}=data;
    if doplot
        scatter3(ndata{1}(:,1),ndata{1}(:,2),ndata{1}(:,3),m(mod(1,10)+1),f(mod(1,10)+1))
    end
end
divide=ndata;